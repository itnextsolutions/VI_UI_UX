{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let SharedService = /*#__PURE__*/(() => {\n  class SharedService {\n    constructor(http) {\n      this.http = http;\n      this.APIUrl = \"https://localhost:7181/api/\";\n    }\n    //Menu Binding\n    getMenuList() {\n      return this.http.get(this.APIUrl + 'Home/GetMenuList');\n    }\n    // Login(val: any) {\n    // return this.http.post(this.APIUrl + 'Login/login', val);\n    // }\n    Login(val) {\n      debugger;\n      return this.http.post(this.APIUrl + 'Login/login', val, {\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json\"\n        })\n      });\n    }\n    //Product Category  Start\n    getproductcategoryList() {\n      return this.http.get(this.APIUrl + 'Product/GetCategory');\n    }\n    getSubcategoryByCategoryId() {\n      return this.http.get(this.APIUrl + 'Product/GetSubCategoryByCategoryId');\n    }\n    addProductcategory(val) {\n      debugger;\n      return this.http.post(this.APIUrl + 'Product/InsertCategory', val);\n    }\n    updateProductcategory(val) {\n      return this.http.put(this.APIUrl + 'Product/UpdateCategory', val);\n    }\n    deleteProductcategory(category_id) {\n      return this.http.delete(this.APIUrl + 'Product/DeleteCategory?id=' + category_id);\n    }\n    //Product Category  End\n    // Look Up Master API's start\n    getLookupMasterList() {\n      return this.http.get(this.APIUrl + 'Lookup/GetLookupMaster');\n    }\n    addLookupMaster(val) {\n      return this.http.post(this.APIUrl + 'Lookup/InsertLookupMaster', val);\n    }\n    updateLookupMaster(val) {\n      return this.http.put(this.APIUrl + 'Lookup/UpdateLookupMaster', val);\n    }\n    deleteLookupMaster(Lookup_Id) {\n      return this.http.delete(this.APIUrl + 'Lookup/DeleteLookupMaster?id=' + Lookup_Id);\n    }\n    // Look Up Master API's End\n    // Look Up Values API's start\n    getLookupDetailsList() {\n      return this.http.get(this.APIUrl + 'Lookup/GetLookupDetails');\n    }\n    addLookupDetails(val) {\n      return this.http.post(this.APIUrl + 'Lookup/InsertLookupDetails', val);\n    }\n    updateLookupDetails(val) {\n      return this.http.put(this.APIUrl + 'Lookup/UpdateLookupDetails', val);\n    }\n    deleteLookupDetails(Lookup_Details_Id) {\n      return this.http.delete(this.APIUrl + 'Lookup/DeleteLookupDetails?id=' + Lookup_Details_Id);\n    }\n    GetLookupNameDropDown() {\n      return this.http.get(this.APIUrl + 'Lookup/GetLookupNameDropDown');\n    }\n    // Look Up Values API's End\n    // Product API's Start\n    getProductDetailsList() {\n      return this.http.get(this.APIUrl + 'Product/GetProducts');\n    }\n    addProductDetails(val) {\n      return this.http.post(this.APIUrl + 'Product/InsertProduct', val);\n    }\n    updateProductDetails(val) {\n      debugger;\n      return this.http.put(this.APIUrl + 'Product/UpdateProduct', val);\n    }\n    deleteProductDetails(Product_Id) {\n      return this.http.delete(this.APIUrl + 'Product/DeleteProduct?id=' + Product_Id);\n    }\n    GetProductCatDropDown() {\n      return this.http.get(this.APIUrl + 'Product/GetProdutCatDropDown');\n    }\n    GetSize() {\n      return this.http.get(this.APIUrl + 'Lookup/GetSize');\n    }\n    GetColor() {\n      return this.http.get(this.APIUrl + 'Lookup/GetColor');\n    }\n    // Login API's End\n    //Blog Start\n    getblog() {\n      return this.http.get(this.APIUrl + 'Blog/GetBlog');\n    }\n    getAllblog() {\n      return this.http.get(this.APIUrl + 'Blog/GetAllBlog');\n    }\n    addblog(val) {\n      return this.http.post(this.APIUrl + 'Blog/InsertBlog', val);\n    }\n    updateBlog(val) {\n      return this.http.put(this.APIUrl + 'Blog/UpdateBlog', val);\n    }\n    deleteBlog(Blog_Id) {\n      return this.http.delete(this.APIUrl + 'Blog/Delete?id=' + Blog_Id);\n    }\n    //Blog End\n    //Customer Review Start\n    getCustomerReview() {\n      return this.http.get(this.APIUrl + 'Customer/GetCustomerReview');\n    }\n    addCustomerReview(val) {\n      return this.http.post(this.APIUrl + 'Customer/InsertCustomerReview', val);\n    }\n    updateCustomerReview(val) {\n      return this.http.put(this.APIUrl + 'Customer/UpdateCustomerReview', val);\n    }\n    deleteCustReview(Customer_Review_Id) {\n      return this.http.delete(this.APIUrl + 'Customer/DeleteCustomerReview?id=' + Customer_Review_Id);\n    }\n    //Customer Review End\n    //Sub product category Start\n    getSubproductcategoryList() {\n      return this.http.get(this.APIUrl + 'Product/GetSubCategory');\n    }\n    addSubProductcategory(val) {\n      return this.http.post(this.APIUrl + 'Product/InsertSubCategory', val);\n    }\n    updateSubProductcategory(val) {\n      return this.http.put(this.APIUrl + 'Product/UpdateSubCategory', val);\n    }\n    deleteSubProductcategory(Id) {\n      return this.http.delete(this.APIUrl + 'Product/DeleteSubCategory?id=' + Id);\n    }\n    GetProductCatDropDownList() {\n      return this.http.get(this.APIUrl + 'Product/GetProdutCatDropDown');\n    }\n    //Sub product category Ent\n    GetSubCatByCatid(id) {\n      return this.http.get(this.APIUrl + 'Product/GetSubCatByCatid?id=' + id);\n    }\n    GetColorCodeListByProductId(id) {\n      return this.http.get(this.APIUrl + 'Product/GetColorCodeListByProductId?id=' + id);\n    }\n    //Notfication  Start\n    getNotificationList() {\n      return this.http.get(this.APIUrl + 'Notification/GetNotification');\n    }\n    addNotification(val) {\n      return this.http.post(this.APIUrl + 'Notification/InsertNotification', val);\n    }\n    updateNotification(val) {\n      return this.http.put(this.APIUrl + 'Notification/UpdateNotification', val);\n    }\n    deleteNotification(NotificationId) {\n      return this.http.delete(this.APIUrl + 'Notification/DeleteNotification?id=' + NotificationId);\n    }\n    //Notfication  End\n    //pagination satart CustReview\n    getCustReviewPagination(pageNo, pageSize) {\n      return this.http.get(this.APIUrl + 'Customer/GetCustomerReviewPagination?pageNo=' + pageNo + '&pageSize=' + pageSize);\n    }\n    getCustReviewCount() {\n      return this.http.get(this.APIUrl + 'Customer/GetCustomerReviewCount');\n    }\n    //End pagination CustReview\n    //pagination satart Product Category Pagination\n    getProductPagination(pageNo, pageSize) {\n      return this.http.get(this.APIUrl + 'Product/GetProductPagination?pageNo=' + pageNo + '&pageSize=' + pageSize);\n    }\n    getProductCount() {\n      return this.http.get(this.APIUrl + 'Product/GetProductCount');\n    }\n    //End  Product Category Pagination  \n    //pagination satart Product Category Pagination\n    getProductCategoryPagination(pageNo, pageSize) {\n      return this.http.get(this.APIUrl + 'Product/GetProductCategoryPagination?pageNo=' + pageNo + '&pageSize=' + pageSize);\n    }\n    getProductCategoryCount() {\n      return this.http.get(this.APIUrl + 'Product/GetProductCategoryCount');\n    }\n    //End  Product Category Pagination\n    //pagination satart Sub Category Pagination\n    getSubCategoryPagination(pageNo, pageSize) {\n      return this.http.get(this.APIUrl + 'Product/SubCategoryPagination?pageNo=' + pageNo + '&pageSize=' + pageSize);\n    }\n    getSubCategoryCount() {\n      return this.http.get(this.APIUrl + 'Product/SubCategoryCount');\n    }\n    //End  Sub Category Pagination\n    //pagination satart Blog \n    getBlogPagination(pageNo, pageSize) {\n      return this.http.get(this.APIUrl + 'Blog/GetAllBlogPagination?pageNo=' + pageNo + '&pageSize=' + pageSize);\n    }\n    getBlogCount() {\n      return this.http.get(this.APIUrl + 'Blog/GetAllBlogCount');\n    }\n    //End Blog Pagination\n    //pagination satart Notification \n    GetNotificationPagination(pageNo, pageSize) {\n      return this.http.get(this.APIUrl + 'Notification/GetNotificationPagination?pageNo=' + pageNo + '&pageSize=' + pageSize);\n    }\n    GetNotificationCount() {\n      return this.http.get(this.APIUrl + 'Notification/GetNotificationCount');\n    }\n    //End Notification Pagination\n    //pagination satart LookupMaster \n    GetLookupMasterPagination(pageNo, pageSize) {\n      return this.http.get(this.APIUrl + 'Lookup/GetLookupMasterPagination?pageNo=' + pageNo + '&pageSize=' + pageSize);\n    }\n    GetLookupMasterCount() {\n      return this.http.get(this.APIUrl + 'Lookup/GetLookupMasterCount');\n    }\n    //End LookupMaster Pagination\n    //pagination satart Lookup Details \n    GetLookupDetailsPagination(pageNo, pageSize) {\n      return this.http.get(this.APIUrl + 'Lookup/GetLookupDetailsPagination?pageNo=' + pageNo + '&pageSize=' + pageSize);\n    }\n    GetLookupDetailsCount() {\n      return this.http.get(this.APIUrl + 'Lookup/GetLookupDetailsCount');\n    }\n    //End Lookup Details Pagination\n    //Start Faq \n    GetFaqPagination(pageNo, pageSize) {\n      return this.http.get(this.APIUrl + 'Faq/GetAllFaqPagination?pageNo=' + pageNo + '&pageSize=' + pageSize);\n    }\n    GetFaqCount() {\n      return this.http.get(this.APIUrl + 'Faq/GetFaqCount');\n    }\n    addFaq(val) {\n      return this.http.post(this.APIUrl + 'Faq/InsertFaq', val);\n    }\n    updateFaq(val) {\n      return this.http.put(this.APIUrl + 'Faq/UpdateFaq', val);\n    }\n    deleteFaq(Id) {\n      return this.http.delete(this.APIUrl + 'Faq/Delete?id=' + Id);\n    }\n  }\n  SharedService.ɵfac = function SharedService_Factory(t) {\n    return new (t || SharedService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  SharedService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SharedService,\n    factory: SharedService.ɵfac,\n    providedIn: 'root'\n  });\n  return SharedService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}