{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ShowLookupComponent = class ShowLookupComponent {\n  constructor(sharedService, paginationService) {\n    this.sharedService = sharedService;\n    this.paginationService = paginationService;\n    this.lookupmasterList = [];\n    this.pageNo = 1;\n    this.pageNumber = [];\n    this.activateAddEditProlookupCom = false;\n    this.pageField = [];\n    this.LookupmasterPerPage = 10;\n  }\n  ngOnInit() {\n    //this.refreshlookupmasterList();\n    this.getAllLookup();\n  }\n  refreshlookupmasterList() {\n    this.sharedService.getLookupMasterList().subscribe(data => {\n      this.lookupmasterList = data;\n    });\n  }\n  getAllLookup() {\n    this.sharedService.GetLookupMasterPagination(this.pageNo, this.LookupmasterPerPage).subscribe(data => {\n      this.lookupmasterList = data;\n      this.getAllLookupCount();\n    });\n  }\n  getAllLookupCount() {\n    this.sharedService.GetLookupMasterCount().subscribe(data => {\n      this.totalLookupmasterCount = data;\n      if (this.totalLookupmasterCount != null) {\n        this.totalLookupmasterCount.forEach(element => {\n          this.total = element.totalcount;\n        });\n      }\n      this.totalNoOfPages();\n    });\n  }\n  //Method For Pagination  \n  totalNoOfPages() {\n    this.paginationData = Number(this.total / this.LookupmasterPerPage);\n    let tempPageData = this.paginationData.toFixed();\n    if (Number(tempPageData) < this.paginationData) {\n      this.exactPageList = Number(tempPageData) + 1;\n      this.paginationService.exactPageList = this.exactPageList;\n    } else {\n      this.exactPageList = Number(tempPageData);\n      this.paginationService.exactPageList = this.exactPageList;\n    }\n    this.paginationService.pageOnLoad();\n    this.pageField = this.paginationService.pageField;\n  }\n  showLookupByPageNumber(page, i) {\n    this.lookupmasterList = [];\n    this.pageNumber = [];\n    this.pageNumber[i] = true;\n    this.pageNo = page;\n    this.getAllLookup();\n  }\n  AddLookupMaster() {\n    this.lookupmaster = {\n      Lookup_Id: 0,\n      Lookup_Name: \"\"\n    };\n    this.modalTitle = \"Add Lookup\";\n    this.activateAddEditProlookupCom = true;\n    this.refreshlookupmasterList();\n  }\n  EditLookupMaster(item) {\n    this.lookupmaster = item;\n    this.activateAddEditProlookupCom = true;\n    this.modalTitle = \"Update Lookup\";\n    this.refreshlookupmasterList();\n  }\n  deleteClick(item) {\n    if (confirm('Are you sure??')) {\n      this.sharedService.deleteLookupMaster(item).subscribe(data => {\n        alert(data.toString());\n        this.refreshlookupmasterList();\n      });\n    }\n  }\n  closeClick() {\n    this.activateAddEditProlookupCom = false;\n    this.refreshlookupmasterList();\n  }\n};\nShowLookupComponent = __decorate([Component({\n  selector: 'app-show-lookup',\n  templateUrl: './show-lookup.component.html',\n  styleUrls: ['./show-lookup.component.css']\n})], ShowLookupComponent);\nexport { ShowLookupComponent };","map":null,"metadata":{},"sourceType":"module"}