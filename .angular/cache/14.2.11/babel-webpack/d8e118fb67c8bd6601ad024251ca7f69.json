{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ShowNotificationComponent = class ShowNotificationComponent {\n  constructor(sharedService, paginationService) {\n    this.sharedService = sharedService;\n    this.paginationService = paginationService;\n    this.notificationList = [];\n    this.pageNo = 1;\n    this.pageNumber = [];\n    this.activateAddEditnotificationCom = false;\n    this.pageField = [];\n    this.notificationPerPage = 10;\n  }\n  ngOnInit() {\n    // this.refreshnotificationList();\n    this.getAllNotification();\n  }\n  refreshnotificationList() {\n    this.sharedService.getNotificationList().subscribe(data => {\n      this.notificationList = data;\n    });\n  }\n  getAllNotification() {\n    this.sharedService.GetNotificationPagination(this.pageNo, this.notificationPerPage).subscribe(data => {\n      this.notificationList = data;\n      this.getAllNotificationCount();\n    });\n  }\n  getAllNotificationCount() {\n    this.sharedService.GetNotificationCount().subscribe(data => {\n      this.totalnotificationCount = data;\n      if (this.totalnotificationCount != null) {\n        this.totalnotificationCount.forEach(element => {\n          this.total = element.totalcount;\n        });\n      }\n      this.totalNoOfPages();\n    });\n  }\n  //Method For Pagination  \n  totalNoOfPages() {\n    this.paginationData = Number(this.total / this.notificationPerPage);\n    let tempPageData = this.paginationData.toFixed();\n    if (Number(tempPageData) < this.paginationData) {\n      this.exactPageList = Number(tempPageData) + 1;\n      this.paginationService.exactPageList = this.exactPageList;\n    } else {\n      this.exactPageList = Number(tempPageData);\n      this.paginationService.exactPageList = this.exactPageList;\n    }\n    this.paginationService.pageOnLoad();\n    this.pageField = this.paginationService.pageField;\n  }\n  showNotificationByPageNumber(page, i) {\n    this.notificationList = [];\n    this.pageNumber = [];\n    this.pageNumber[i] = true;\n    this.pageNo = page;\n    this.getAllNotification();\n  }\n  Addnotification() {\n    this.notification = {\n      NotificationId: 0,\n      NotificationTitle: \"\",\n      FromDate: \"\",\n      ToDate: \"\",\n      ButtonText: \"\",\n      ButtonUrl: \"\"\n    };\n    this.modalTitle = \"Add notification\";\n    this.activateAddEditnotificationCom = true;\n    this.refreshnotificationList();\n  }\n  Editnotification(item) {\n    this.notification = item;\n    this.activateAddEditnotificationCom = true;\n    this.modalTitle = \"Update notification\";\n    this.refreshnotificationList();\n  }\n  deleteClick(item) {\n    if (confirm('Are you sure??')) {\n      this.sharedService.deleteNotification(item).subscribe(data => {\n        alert(data.toString());\n        this.refreshnotificationList();\n      });\n    }\n  }\n  closeClick() {\n    this.activateAddEditnotificationCom = false;\n    this.refreshnotificationList();\n  }\n};\nShowNotificationComponent = __decorate([Component({\n  selector: 'app-show-notification',\n  templateUrl: './show-notification.component.html',\n  styleUrls: ['./show-notification.component.css']\n})], ShowNotificationComponent);\nexport { ShowNotificationComponent };","map":null,"metadata":{},"sourceType":"module"}