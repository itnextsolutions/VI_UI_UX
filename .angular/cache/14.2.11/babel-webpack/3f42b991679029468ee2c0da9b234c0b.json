{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ShowProductComponent = class ShowProductComponent {\n  constructor(sharedService, paginationService) {\n    this.sharedService = sharedService;\n    this.paginationService = paginationService;\n    this.ProductList = [];\n    this.pageNo = 1;\n    this.pageNumber = [];\n    this.activateAddEditProCom = false;\n    this.Color_CodeList = [];\n    this.pageField = [];\n    this.ProductPerPage = 10;\n  }\n  ngOnInit() {\n    this.getAllProduct();\n    //this.refreshproductList();\n  }\n\n  refreshproductList() {\n    this.sharedService.getProductDetailsList().subscribe(data => {\n      this.ProductList = data;\n    });\n    this.sharedService.GetColorCodeListByProductId(this.product.Product_Id).subscribe(data => {\n      this.Color_CodeList = data;\n    });\n  }\n  getAllProduct() {\n    this.sharedService.getProductPagination(this.pageNo, this.ProductPerPage).subscribe(data => {\n      this.ProductList = data;\n      this.getAlltotalProductCount();\n    });\n  }\n  getAlltotalProductCount() {\n    this.sharedService.getProductCount().subscribe(data => {\n      this.totalProductCount = data;\n      if (this.totalProductCount != null) {\n        this.totalProductCount.forEach(element => {\n          this.total = element.totalcount;\n        });\n      }\n      this.totalNoOfPages();\n    });\n  }\n  //Method For Pagination  \n  totalNoOfPages() {\n    this.paginationData = Number(this.total / this.ProductPerPage);\n    let tempPageData = this.paginationData.toFixed();\n    if (Number(tempPageData) < this.paginationData) {\n      this.exactPageList = Number(tempPageData) + 1;\n      this.paginationService.exactPageList = this.exactPageList;\n    } else {\n      this.exactPageList = Number(tempPageData);\n      this.paginationService.exactPageList = this.exactPageList;\n    }\n    this.paginationService.pageOnLoad();\n    this.pageField = this.paginationService.pageField;\n  }\n  showProductByPageNumber(page, i) {\n    this.ProductList = [];\n    this.pageNumber = [];\n    this.pageNumber[i] = true;\n    this.pageNo = page;\n    this.getAllProduct();\n  }\n  AddProduct() {\n    this.product = {\n      Product_Id: 0,\n      Category_Id: \"\",\n      Product_Title: \"\",\n      Image_Name: \"\",\n      Category_Name: \"\",\n      SubCategory: \"\",\n      SubCategory_Id: \"\",\n      Product_Description: \"\"\n    };\n    this.modalTitle = \"Add Product\";\n    this.activateAddEditProCom = true;\n    this.getAllProduct();\n  }\n  EditProduct(item) {\n    this.product = item;\n    //this.ColorIdList=this.Color_CodeList;\n    this.activateAddEditProCom = true;\n    this.modalTitle = \"Update Product\";\n    this.getAllProduct();\n  }\n  deleteClick(item) {\n    if (confirm('Are you sure??')) {\n      this.sharedService.deleteProductDetails(item).subscribe(data => {\n        alert(data.toString());\n        this.getAllProduct();\n      });\n    }\n  }\n  closeClick() {\n    this.activateAddEditProCom = false;\n    this.getAllProduct();\n  }\n};\nShowProductComponent = __decorate([Component({\n  selector: 'app-show-product',\n  templateUrl: './show-product.component.html',\n  styleUrls: ['./show-product.component.css']\n})], ShowProductComponent);\nexport { ShowProductComponent };","map":null,"metadata":{},"sourceType":"module"}